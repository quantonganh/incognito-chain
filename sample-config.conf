[Application Options]

; ------------------------------------------------------------------------------
; Data settings
; ------------------------------------------------------------------------------

; The directory to store data such as the block chain and peer addresses.  The
; block chain takes several GB, so this location must have a lot of free space.
; The default is ~/.incognito/data on POSIX OSes, $LOCALAPPDATA/Incognito/data on Windows,
; ~/Library/Application Support/Incognito/data on Mac OS, and $home/incognito/data on
; Plan9.  Environment variables are expanded so they may be used.  NOTE: Windows
; environment variables are typically %VARIABLE%, but they must be accessed with
; $VARIABLE here.  Also, ~ is expanded to $LOCALAPPDATA on Windows.
; datadir=~/.incognito/data


; ------------------------------------------------------------------------------
; Network settings
; ------------------------------------------------------------------------------

; Use testnet.
; testnet=1

; ******************************************************************************
; Summary of 'addpeer' versus 'connect'.
;
; Only one of the following two options, 'addpeer' and 'connect', may be
; specified.  Both allow you to specify peers that you want to stay connected
; with, but the behavior is slightly different.  By default, btcd will query DNS
; to find peers to connect to, so unless you have a specific reason such as
; those described below, you probably won't need to modify anything here.
;
; 'addpeer' does not prevent connections to other peers discovered from
; the peers you are connected to and also lets the remote peers know you are
; available so they can notify other peers they can to connect to you.  This
; option might be useful if you are having problems finding a node for some
; reason (perhaps due to a firewall).
;
; 'connect', on the other hand, will ONLY connect to the specified peers and
; no others.  It also disables listening (unless you explicitly set listen
; addresses via the 'listen' option) and DNS seeding, so you will not be
; advertised as an available peer to the peers you connect to and won't accept
; connections from any other peers.  So, the 'connect' option effectively allows
; you to only connect to "trusted" peers.
; ******************************************************************************

; -------------------------------------- Using for Bootnode server --------------------------------------------
;
; discoverpeersaddress=127.0.0.1:9330
;
; -------------------------------------------------------------------------------------------------------------

; Add persistent peers to connect to as desired.  One peer per line.
; You may specify each IP address with or without a port.  The default port will
; be added automatically if one is not specified here.
; addpeer=192.168.1.1
; addpeer=10.0.0.2:8333
; addpeer=fe80::1
; addpeer=[fe80::2]:8333

; Add persistent peers that you ONLY want to connect to as desired.  One peer
; per line.  You may specify each IP address with or without a port.  The
; default port will be added automatically if one is not specified here.
; NOTE: Specifying this option has other side effects as described above in
; the 'addpeer' versus 'connect' summary section.
; connect=192.168.1.1
; connect=10.0.0.2:8333
; connect=fe80::1
; connect=[fe80::2]:8333

; Maximum number of inbound and outbound peers.
; maxpeers=125

; Maximum number of outbound peers.
; maxoutpeers=1000

; Maximum number of inbound peers.
; maxinpeers=1000

; Disable DNS seeding for peers.  By default, when btcd starts, it will use
; DNS to query for available peers to connect with.
; nodnsseed=1

; Specify the interfaces to listen on.  One listen address per line.
; NOTE: The default port is modified by some options such as 'testnet', so it is
; recommended to not specify a port and allow a proper default to be chosen
; unless you have a specific reason to do otherwise.
; All interfaces on default port (this is the default):
;  listen=
; All ipv4 interfaces on default port:
;  listen=0.0.0.0
; All ipv6 interfaces on default port:
;   listen=::
; All interfaces on port 9333:
;   listen=:9333
; All ipv4 interfaces on port 9333:
;   listen=0.0.0.0:9333
; All ipv6 interfaces on port 9333:
;   listen=[::]:8333
; Only ipv4 localhost on port 9333:
;   listen=127.0.0.1:9333
; Only ipv6 localhost on port 9333:
;   listen=[::1]:9333
; Only ipv4 localhost on non-standard port 9336:
;   listen=127.0.0.1:9336
; All interfaces on non-standard port 9336:
;   listen=:8336
; All ipv4 interfaces on non-standard port 9336:
;   listen=0.0.0.0:9336
; All ipv6 interfaces on non-standard port 9336:
;   listen=[::]:9336

; Disable listening for incoming connections.  This will override all listeners.
; nolisten=1

; ------------------------------------------------------------------------------
; Limit connections by config
; ------------------------------------------------------------------------------
; Max peers in same shard for connection
; maxpeersameshard=300
; Max peers in other shard for connection
; maxpeerothershard=600
; Max peers in other for connection
; maxpeerother=300
; Max peers in no shard for connection
; maxpeernoshard=200
; Max peers in beacon for connection
; maxpeerbeacon=500

; ------------------------------------------------------------------------------
; RPC server options - The following options control the built-in RPC server
; which is used to control and query information from a running btcd process.
;
; NOTE: The RPC server is disabled by default if rpcuser AND rpcpass, or
; rpclimituser AND rpclimitpass, are not specified.
; ------------------------------------------------------------------------------

; Disable authentication on rpc api
; norpcauth=true

; Secure the RPC API by specifying the username and password.  You can also
; specify a limited username and password.  You must specify at least one
; full set of credentials - limited or admin - or the RPC server will
; be disabled.
; rpcuser=whatever_admin_username_you_want
; rpcpass=
; rpclimituser=whatever_limited_username_you_want
; rpclimitpass=

; Specify the interfaces for the RPC server listen on.  One listen address per
; line.  NOTE: The default port is modified by some options such as 'testnet',
; so it is recommended to not specify a port and allow a proper default to be
; chosen unless you have a specific reason to do otherwise.  By default, the
; RPC server will only listen on localhost for IPv4 and IPv6.
; All interfaces on default port:
;   rpclisten=
; All ipv4 interfaces on default port:
;   rpclisten=0.0.0.0
; All ipv6 interfaces on default port:
;   rpclisten=::
; All interfaces on port 9334:
;   rpclisten=:9334
; All ipv4 interfaces on port 9334:
;   rpclisten=0.0.0.0:9334
; All ipv6 interfaces on port 9334:
;   rpclisten=[::]:9334
; Only ipv4 localhost on port 9334:
;   rpclisten=127.0.0.1:9334
; Only ipv6 localhost on port 9334:
;   rpclisten=[::1]:9334
; Only ipv4 localhost on non-standard port 9337:
;   rpclisten=127.0.0.1:9337
; All interfaces on non-standard port 9337:
;   rpclisten=:9337
; All ipv4 interfaces on non-standard port 9337:
;   rpclisten=0.0.0.0:9337
; All ipv6 interfaces on non-standard port 9337:
;   rpclisten=[::]:9337

; Specify the maximum number of concurrent RPC clients for standard connections.
; rpcmaxclients=10

; Mirror some JSON-RPC quirks of Costant Core -- NOTE: Discouraged unless
; interoperability issues need to be worked around
; rpcquirks=1

; Use the following setting to disable the RPC server even if the rpcuser and
; rpcpass are specified above.  This allows one to quickly disable the RPC
; server without having to remove credentials from the config file.
; norpc=1

; Use the following setting to disable TLS for the RPC server.  NOTE: This
; option only works if the RPC server is bound to localhost interfaces (which is
; the default).
; notls=1


; ------------------------------------------------------------------------------
; Coin Generation (Mining) Settings - The following options control the
; generation of block templates used by external mining applications through RPC
; calls as well as the built-in CPU miner (if enabled).
; ------------------------------------------------------------------------------

; Enable built-in CPU mining.
;
; NOTE: This is typically only useful for testing purposes such as testnet or
; simnet since the difficulty on mainnet is far too high for CPU mining to be
; worth your while.
; generate=false

; Add addresses to pay mined blocks to for CPU mining and potentially in the
; block templates generated for the getblocktemplate RPC.  One address per line.
; producerprivatekey=privatekey of block producer

; ------------------------------------------------------------------------------
; Debug
; ------------------------------------------------------------------------------

; Debug logging level.
; Valid levels are {trace, debug, info, warn, error, critical}
; You may also specify <subsystem>=<level>,<subsystem2>=<level>,... to set
; log level for individual subsystems.  Use btcd --debuglevel=show to list
; available subsystems.
; debuglevel=info

; ------------------------------------------------------------------------------
; Fee estimator
; ------------------------------------------------------------------------------
; limitfee=1

; ------------------------------------------------------------------------------
; Transaction Mempool
; ------------------------------------------------------------------------------
; Load transactions from Mempool database
; loadmempool=0
; ------------------------------------------------------------------------------
; Persistence transaction in mempool database
; When receivinng transaction from anywhere, this flag support our node can storage
; into DB for txs in mem pool
; persistmempool=0
; Set Time To Live (TTL) Value for transaction that enter pool(default: 3600 seconds)
; txpoolttl=3600
; Set Maximum number of transaction in pool
; txpoolmaxtx=100000
; ------------------------------------------------------------------------------

; ------------------------------------------------------------------------------
; Get random number from BTC
; ------------------------------------------------------------------------------
; Default 0: BlockCypherClient, 1: Self Host Bitcoin Client (Must pass in btcclientip, btcclientport, btcclientusername, btcclientpassword
; btcclient=0
; btcclientip=127.0.0.1
; btcclientport=8332
; btcclientusername=
; btcclientpassword=

; ------------------------------------------------------------------------------
; Mining Node config
; ------------------------------------------------------------------------------
; Using mining key(validator key on wallet) for private key to run node
; enable mining
; mining=0
; set mining key
; miningkeys=
; or private key for mining
; privatekey=
; Role of this node (beacon/shard/relay | default role is 'relay' (relayshards must be set to run), 'auto' mode will switch between 'beacon' and 'shard')
; nodemode=relay
; set relay shards of this node when in 'relay' mode if noderole is auto then it only sync shard data when user is a shard producer/validator
; relayshards=all